"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(l,".").concat(d)]||u[d]||c[d]||o;return n?a.createElement(g,i(i({ref:t},m),{},{components:n})):a.createElement(g,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},627:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>l,metadata:()=>p,toc:()=>m,default:()=>u});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"assets",title:"Assets"},l=void 0,p={unversionedId:"guides/assets",id:"guides/assets",title:"Assets",description:"Images",source:"@site/tmp-docs/guides/assets.md",sourceDirName:"guides",slug:"/guides/assets",permalink:"/docs/guides/assets",editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/guides/assets.md",tags:[],version:"current",frontMatter:{id:"assets",title:"Assets"},sidebar:"sidebar",previous:{title:"Child App",permalink:"/docs/features/child-app/overview"},next:{title:"Bundle optimization",permalink:"/docs/guides/bundle-optimization"}},m=[{value:"Images",id:"images",children:[{value:"Raster",id:"raster",children:[],level:3},{value:"Vector",id:"vector",children:[{value:"React component",id:"react-component",children:[],level:4}],level:3},{value:"Optimization",id:"optimization",children:[],level:3},{value:"Typings",id:"typings",children:[],level:3}],level:2},{value:"Fonts",id:"fonts",children:[{value:"Custom Web Fonts",id:"custom-web-fonts",children:[],level:3},{value:"Typings",id:"typings-1",children:[],level:3}],level:2}],c={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"images"},"Images"),(0,o.kt)("h3",{id:"raster"},"Raster"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Supported formats:")," ",(0,o.kt)("inlineCode",{parentName:"p"},".png"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".jpg"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".jpeg"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".gif"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".webp")),(0,o.kt)("p",null,"Import of raster image emits a separate file, while default export returns URL string and named export returns ",(0,o.kt)("inlineCode",{parentName:"p"},"image")," object with the following interface:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface ImageObject {\n  src: string;\n  width: number;\n  height: number;\n}\n")),(0,o.kt)("p",null,"Example with named export and automatic ",(0,o.kt)("inlineCode",{parentName:"p"},"aspect-ratio")," calculation based on real image width and height:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { image } from \'./images/mountains.jpeg\';\n\nconst Image = () => {\n  const { src, width, height } = image;\n\n  // <img src="${ASSETS_PREFIX}/dist/client/9930f34d1d49796027f2a18ea89e6ccf.jpeg" width="1104" height="460" />\n  return <img src={src} width={width} height={height} />;\n}\n')),(0,o.kt)("p",null,"Example with default export:"),(0,o.kt)("p",null,":::warn"),(0,o.kt)("p",null,"Usage without ",(0,o.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," attributes not recommended, it will degrade the Cumulative Layout Shift metric"),(0,o.kt)("p",null,":::"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import src from './images/mountains.jpeg';\n\nconst Image = () => {\n  // <img src=\"${ASSETS_PREFIX}/dist/client/9930f34d1d49796027f2a18ea89e6ccf.jpeg\" />\n  return <img src={src} />;\n}\n")),(0,o.kt)("h3",{id:"vector"},"Vector"),(0,o.kt)("p",null,"Import of ",(0,o.kt)("inlineCode",{parentName:"p"},".svg")," images emits a separate file and have different behavior on server and client side, because of some legacy coupling with our internal UI-kit library. By default, on server side, it will return image source code as a string, and on client side, it will return an URL string."),(0,o.kt)("p",null,"This default behavior not very useful, so we recommend to use imports with ",(0,o.kt)("inlineCode",{parentName:"p"},"svgr")," ",(0,o.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/module/#ruleresourcequery"},"resource query"),"."),(0,o.kt)("h4",{id:"react-component"},"React component"),(0,o.kt)("p",null,"Imports with ",(0,o.kt)("inlineCode",{parentName:"p"},".svg?react")," resource query will return React component, created by ",(0,o.kt)("a",{parentName:"p",href:"https://react-svgr.com/"},"svgr library"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import Image from \'./images/logo.svg?react\';\n\nconst Logo = () => {\n  // <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80.9 72.2" width="100" height="100">...</svg>\n  return <Image width="100" height="100" />;\n}\n')),(0,o.kt)("p",null,"All properties to this ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," component will be passed to root ",(0,o.kt)("inlineCode",{parentName:"p"},"svg")," tag."),(0,o.kt)("h3",{id:"optimization"},"Optimization"),(0,o.kt)("p",null,"By default, ",(0,o.kt)("strong",{parentName:"p"},"raster")," images doesn't have any optimization, and you have a few options for it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"run the image once through tools like ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/GoogleChromeLabs/squoosh"},"Squoosh")),(0,o.kt)("li",{parentName:"ul"},"optimize images in runtime with services like ",(0,o.kt)("a",{parentName:"li",href:"https://imgproxy.net/"},"imgproxy")),(0,o.kt)("li",{parentName:"ul"},"in ",(0,o.kt)("inlineCode",{parentName:"li"},"tramvai.json")," turn on ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/tcoopman/image-webpack-loader"},"image-webpack-loader")," with ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/imagemin/imagemin"},"imagemin")," under the hood")),(0,o.kt)("p",null,"For automatic ",(0,o.kt)("inlineCode",{parentName:"p"},"imagemin")," processing use option ",(0,o.kt)("inlineCode",{parentName:"p"},"imageOptimization"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tramvai.json"',title:'"tramvai.json"'},'{\n  "projects": {\n    "appName": {\n      "commands": {\n        "build": {\n          "configurations": {\n            "imageOptimization": {\n              // enable image optimization\n              "enabled": true,\n              // options for the detailed settings (https://github.com/tcoopman/image-webpack-loader#options)\n              "options": {}\n            }\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,o.kt)("p",null,"For ",(0,o.kt)("strong",{parentName:"p"},"vector")," images, on contrast, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/svg/svgo"},"svgo")," always enabled."),(0,o.kt)("h3",{id:"typings"},"Typings"),(0,o.kt)("p",null,"To prevent typescript issues with image imports, update your custom types declaration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typings.d.ts"',title:'"typings.d.ts"'},"import type { ImageObject, SvgComponent } from '@tramvai-tinkoff/module-image';\n\ntype ImageString = string;\n\ndeclare module '*.png' {\n  export default ImageString;\n  export const image: ImageObject;\n}\ndeclare module '*.jpg' {\n  export default ImageString;\n  export const image: ImageObject;\n}\ndeclare module '*.jpeg' {\n  export default ImageString;\n  export const image: ImageObject;\n}\n\ndeclare module '*.svg' {\n  export = string;\n}\ndeclare module '*.svg?react' {\n  const Svg: SvgComponent;\n  export = Svg;\n}\n")),(0,o.kt)("h2",{id:"fonts"},"Fonts"),(0,o.kt)("p",null,"Simpliest way to add Web Fonts in your project is to use ",(0,o.kt)("inlineCode",{parentName:"p"},"RENDER_SLOTS")," token, example with ",(0,o.kt)("inlineCode",{parentName:"p"},"Lato")," Google Font:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { RENDER_SLOTS, ResourceType, ResourceSlot } from '@tramvai/tokens-render';\n\nprovide({\n  provide: RENDER_SLOTS,\n  multi: true,\n  useValue: {\n    type: ResourceType.style,\n    slot: ResourceSlot.HEAD_CORE_STYLES,\n    payload: 'https://fonts.googleapis.com/css2?family=Lato&display=swap',\n  },\n});\n")),(0,o.kt)("p",null,"Also, for faster text rendering, you can preload used fonts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { RENDER_SLOTS, ResourceType, ResourceSlot } from '@tramvai/tokens-render';\n\nprovde({\n  provide: RENDER_SLOTS,\n  multi: true,\n  useValue: {\n    type: ResourceType.preloadLink,\n    slot: ResourceSlot.HEAD_CORE_SCRIPTS,\n    payload: 'https://fonts.gstatic.com/s/lato/v20/S6uyw4BMUTPHjx4wXiWtFCc.woff2',\n    attrs: {\n      as: 'font',\n      type: 'font/woff2',\n      crossOrigin: 'anonymous',\n    },\n  },\n})\n")),(0,o.kt)("h3",{id:"custom-web-fonts"},"Custom Web Fonts"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Supported formats:")," ",(0,o.kt)("inlineCode",{parentName:"p"},".woff2")),(0,o.kt)("p",null,"Recommended way to add custom fonts - import nessesary font in ",(0,o.kt)("inlineCode",{parentName:"p"},"@font-face")," directive:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="app.module.css"',title:'"app.module.css"'},":global {\n  @font-face {\n    font-family: 'CascadiaCode';\n    src: url('./fonts/CascadiaCodePL.woff2') format('woff2');\n  }\n\n  html {\n    font-family: CascadiaCode;\n  }\n}\n")),(0,o.kt)("p",null,"Then just import this CSS file in application entry:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import './app.module.css';\n")),(0,o.kt)("p",null,"Result CSS will looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"@font-face {\n  font-family: 'CascadiaCode';\n  src: url(${ASSETS_PREFIX}/dist/client/20d46cabfe465e8d.woff2) format('woff2');\n}\nhtml {\n  font-family: CascadiaCode;\n}\n")),(0,o.kt)("p",null,"And preload your font as in previous example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { RENDER_SLOTS, ResourceType, ResourceSlot } from '@tramvai/tokens-render';\nimport font from './fonts/CascadiaCodePL.woff2';\n\nprovide({\n  provide: RENDER_SLOTS,\n  multi: true,\n  useValue: {\n    type: ResourceType.preloadLink,\n    slot: ResourceSlot.HEAD_CORE_SCRIPTS,\n    payload: font,\n    attrs: {\n      as: 'font',\n      type: 'font/woff2',\n      crossOrigin: 'anonymous',\n    },\n  },\n});\n")),(0,o.kt)("h3",{id:"typings-1"},"Typings"),(0,o.kt)("p",null,"To prevent typescript issues with import ",(0,o.kt)("inlineCode",{parentName:"p"},"*.woff2")," file, update your custom types declaration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typings.d.ts"',title:'"typings.d.ts"'},"declare module '*.woff2' {\n  export = string;\n}\n")))}u.isMDXComponent=!0}}]);