"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2933],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(t),m=r,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return t?a.createElement(h,l(l({ref:n},u),{},{components:t})):a.createElement(h,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),r=t(6010);const o="tabItem_Ymn6";function l(e){var n=e.children,t=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),r=t(7294),o=t(6010),l=t(2389),i=t(7392),s=t(7094),d=t(2466);const u="tabList__CuJ",p="tabItem_LNqP";function c(e){var n,t,l=e.lazy,c=e.block,m=e.defaultValue,h=e.values,f=e.groupId,y=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=h?h:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,i.l)(k,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var R=null===m?m:null!=(n=null!=m?m:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:g[0].props.value;if(null!==R&&!k.some((function(e){return e.value===R})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+R+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),b=N.tabGroupChoices,E=N.setTabGroupChoices,T=(0,r.useState)(R),S=T[0],w=T[1],C=[],A=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var O=b[f];null!=O&&O!==S&&k.some((function(e){return e.value===O}))&&w(O)}var D=function(e){var n=e.currentTarget,t=C.indexOf(n),a=k[t].value;a!==S&&(A(n),w(a),null!=f&&E(f,String(a)))},_=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,r=C.indexOf(e.currentTarget)+1;t=null!=(a=C[r])?a:C[0];break;case"ArrowLeft":var o,l=C.indexOf(e.currentTarget)-1;t=null!=(o=C[l])?o:C[C.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":c},y)},k.map((function(e){var n=e.value,t=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:S===n?0:-1,"aria-selected":S===n,key:n,ref:function(e){return C.push(e)},onKeyDown:_,onFocus:D,onClick:D},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":S===n})}),null!=t?t:n)}))),l?(0,r.cloneElement)(g.filter((function(e){return e.props.value===S}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==S})}))))}function m(e){var n=(0,l.Z)();return r.createElement(c,(0,a.Z)({key:String(n)},e))}},6383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>d,metadata:()=>p,toc:()=>m});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=t(5488),i=t(5162),s=["components"],d={},u=void 0,p={unversionedId:"references/modules/render",id:"references/modules/render",title:"render",description:"Module for rendering React application on the server and in the browser",source:"@site/tmp-docs/references/modules/render.md",sourceDirName:"references/modules",slug:"/references/modules/render",permalink:"/docs/references/modules/render",draft:!1,editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/modules/render.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"react-query",permalink:"/docs/references/modules/react-query"},next:{title:"request-limiter",permalink:"/docs/references/modules/request-limiter"}},c={},m=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Explanation",id:"explanation",level:2},{value:"React Strict Mode",id:"react-strict-mode",level:3},{value:"Application static assets",id:"application-static-assets",level:3},{value:"Automatic resource inlining",id:"automatic-resource-inlining",level:3},{value:"Concept",id:"concept",level:4},{value:"Solution",id:"solution",level:4},{value:"Connection and configuration",id:"connection-and-configuration",level:4},{value:"Peculiarities",id:"peculiarities",level:4},{value:"Automatic resource preloading",id:"automatic-resource-preloading",level:3},{value:"Root layout",id:"root-layout",level:3},{value:"Adding a default header and footer",id:"adding-a-default-header-and-footer",level:4},{value:"Via provider",id:"via-provider",level:5},{value:"Via bundle",id:"via-bundle",level:5},{value:"Adding components and wrappers",id:"adding-components-and-wrappers",level:4},{value:"Replacing the root layout",id:"replacing-the-root-layout",level:4},{value:"Add layoutComponent to route",id:"add-layoutcomponent-to-route",level:5},{value:"Replace layoutDefault",id:"replace-layoutdefault",level:5},{value:"Nested layout",id:"nested-layout",level:3},{value:"Adding a nested layout",id:"adding-a-nested-layout",level:4},{value:"How to",id:"how-to",level:2},{value:"How to add assets loading to a page",id:"how-to-add-assets-loading-to-a-page",level:3},{value:"React 18 concurrent features",id:"react-18-concurrent-features",level:3},{value:"Testing",id:"testing",level:3},{value:"Testing render extensions via RENDER_SLOTS or RESOURCES_REGISTRY tokens",id:"testing-render-extensions-via-render_slots-or-resources_registry-tokens",level:4},{value:"Exported tokens",id:"exported-tokens",level:2}],h={toc:m};function f(e){var n=e.components,d=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},h,d,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Module for rendering React application on the server and in the browser"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"init command",src:t(3121).Z,width:"1061",height:"441"})),(0,o.kt)("p",null,"Module contains the logic for generating HTML pages, starting from getting current page component, and finishing with the rendering result HTML using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@tinkoff/htmlpagebuilder")," library."),(0,o.kt)("p",null,"This module includes code for creating top-level React component with all necessary providers composition, and page and layout components from the current route."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You need to install ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/module-render")),(0,o.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @tramvai/module-render\n"))),(0,o.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @tramvai/module-render\n")))),(0,o.kt)("p",null,"And connect to the project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createApp } from '@tramvai/core';\nimport { RenderModule } from '@tramvai/module-render';\n\ncreateApp({\n  name: 'tincoin',\n  modules: [RenderModule],\n});\n")),(0,o.kt)("h2",{id:"explanation"},"Explanation"),(0,o.kt)("h3",{id:"react-strict-mode"},"React Strict Mode"),(0,o.kt)("p",null,"More information about Strict Mode can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/strict-mode.html"},"official documentation"),"."),(0,o.kt)("p",null,"To set the mode, you must pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"useStrictMode")," parameter when initializing the ",(0,o.kt)("inlineCode",{parentName:"p"},"RenderModule"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"RenderModule.forRoot({ useStrictMode: true });\n")),(0,o.kt)("h3",{id:"application-static-assets"},"Application static assets"),(0,o.kt)("p",null,"For static assets (JS, CSS, fonts, etc.) we create special resources registry module, which allow to provide in DI list of resources, and then render them to specifics slots in final HTML."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"createApp({\n  providers: [\n    {\n      provide: RENDER_SLOTS,\n      multi: true,\n      useValue: [\n        {\n          type: ResourceType.inlineScript, // inlineScript wrap payload in tag <script>\n          slot: ResourceSlot.HEAD_CORE_SCRIPTS, // define position where in HTML will be included resource\n          payload: 'alert(\"render\")',\n        },\n        {\n          type: ResourceType.asIs, // asIs just add payload as a string, without special processing\n          slot: ResourceSlot.BODY_TAIL,\n          payload: '<div>hello from render slots</div>',\n        },\n      ],\n    },\n  ],\n});\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"type")," - presets for different resources types"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"slot")," - slot in HTML where resource will be included"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"payload")," - information that will be rendered")),(0,o.kt)("p",null,(0,o.kt)("details",null,(0,o.kt)("summary",null,"Available slots"),(0,o.kt)("p",null,(0,o.kt)("pre",{parentName:"p"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const REACT_RENDER = 'react:render';\nexport const HEAD_PERFORMANCE = 'head:performance';\nexport const HEAD_META = 'head:meta';\nexport const HEAD_POLYFILLS = 'head:polyfills';\nexport const HEAD_CORE_STYLES = 'head:core-styles';\nexport const HEAD_CORE_SCRIPTS = 'head:core-scripts';\nexport const HEAD_DYNAMIC_SCRIPTS = 'head:dynamic-scripts';\nexport const HEAD_ANALYTICS = 'head:analytics';\nexport const HEAD_ICONS = 'head:icons';\nexport const BODY_START = 'body:start';\nexport const BODY_END = 'body:end';\nexport const BODY_TAIL_ANALYTICS = 'body:tail:analytics';\nexport const BODY_TAIL = 'body:tail';\n\n"))))),(0,o.kt)("p",null,(0,o.kt)("details",null,(0,o.kt)("summary",null,"Layout of slots in the HTML page"),(0,o.kt)("p",null,(0,o.kt)("pre",{parentName:"p"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { StaticDescriptor, DynamicDescriptor } from '@tinkoff/htmlpagebuilder';\nimport { dynamicRender, staticRender } from '@tinkoff/htmlpagebuilder';\nimport { ResourceSlot } from '@tramvai/tokens-render';\nimport { formatAttributes } from './utils';\n\nconst {\n  REACT_RENDER,\n  HEAD_CORE_SCRIPTS,\n  HEAD_DYNAMIC_SCRIPTS,\n  HEAD_META,\n  HEAD_POLYFILLS,\n  HEAD_CORE_STYLES,\n  HEAD_PERFORMANCE,\n  HEAD_ANALYTICS,\n  BODY_START,\n  BODY_END,\n  HEAD_ICONS,\n  BODY_TAIL_ANALYTICS,\n  BODY_TAIL,\n} = ResourceSlot;\n\nexport const htmlPageSchemaFactory = ({\n  htmlAttrs,\n}): Array<StaticDescriptor | DynamicDescriptor> => {\n  return [\n    staticRender('<!DOCTYPE html>'),\n    staticRender(`<html ${formatAttributes(htmlAttrs, 'html')}>`),\n\n    staticRender('<head>'),\n    staticRender('<meta charset=\"UTF-8\">'),\n    dynamicRender(HEAD_META),\n    dynamicRender(HEAD_PERFORMANCE),\n    dynamicRender(HEAD_CORE_STYLES),\n    dynamicRender(HEAD_POLYFILLS),\n    dynamicRender(HEAD_DYNAMIC_SCRIPTS),\n    dynamicRender(HEAD_CORE_SCRIPTS),\n    dynamicRender(HEAD_ANALYTICS),\n    dynamicRender(HEAD_ICONS),\n    staticRender('</head>'),\n    staticRender(`<body ${formatAttributes(htmlAttrs, 'body')}>`),\n    dynamicRender(BODY_START),\n    // react app\n    dynamicRender(REACT_RENDER),\n    dynamicRender(BODY_END),\n    dynamicRender(BODY_TAIL_ANALYTICS),\n    dynamicRender(BODY_TAIL),\n    staticRender('</body>'),\n    staticRender('</html>'),\n  ];\n};\n\n"))))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#How-to-add-assets-loading-to-a-page"},"How to add assets loading to a page")),(0,o.kt)("h3",{id:"automatic-resource-inlining"},"Automatic resource inlining"),(0,o.kt)("h4",{id:"concept"},"Concept"),(0,o.kt)("p",null,"A large number of resource files creates problems when loading the page, because the browser has to create a lot of connections to small files"),(0,o.kt)("h4",{id:"solution"},"Solution"),(0,o.kt)("p",null,"To optimize page loading, we've added the ability to include some resources directly in the incoming HTML from the server.\nTo avoid inlining everything at all, we've added the ability to set an upper limit for file size."),(0,o.kt)("h4",{id:"connection-and-configuration"},"Connection and configuration"),(0,o.kt)("p",null,"Since version ",(0,o.kt)("inlineCode",{parentName:"p"},"0.60.7")," inlining for styles is enabled by default, CSS files smaller than 40kb before gzip (+-10kb after gzip) are inlined.\nTo override these settings, add a provider specifying types of resources to be inlined (styles and/or scripts) and an upper limit for file size (in bytes, before gzip):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { RESOURCE_INLINE_OPTIONS } from '@tramvai/tokens-render';\nimport { ResourceType } from '@tramvai/tokens-render';\nimport { provide } from '@tramvai/core';\n\nprovide({\n  provide: RESOURCE_INLINE_OPTIONS,\n  useValue: {\n    types: [ResourceType.script, ResourceType.style], // Turn on for a CSS and JS files\n    threshold: 1024, // 1kb unzipped\n  },\n}),\n")),(0,o.kt)("h4",{id:"peculiarities"},"Peculiarities"),(0,o.kt)("p",null,"All scripts and styles (depending on the settings) registered through the ",(0,o.kt)("inlineCode",{parentName:"p"},"ResourcesRegistry")," are inlined."),(0,o.kt)("p",null,"File uploading to the server occurs in lazy mode, asynchronously.\nThis means that there will be no inlining when the page first loads.\nIt also means that there is no extra waiting for resources to load on the server side.\nOnce the file is in the cache it will be inline.\nThe cache has a TTL of 30 minutes and there is no resetting of the cache."),(0,o.kt)("h3",{id:"automatic-resource-preloading"},"Automatic resource preloading"),(0,o.kt)("p",null,"To speed up data loading, we've added a preloading system for resources and asynchronous chunks, which works according to the following scenario:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"After rendering the application, we get information about all the CSS, JS bundles and asynchronous chunks used in the application"),(0,o.kt)("li",{parentName:"ul"},"Next we add all the CSS to the ",(0,o.kt)("strong",{parentName:"li"},"preload")," tag and add onload event on them. We need to load the blocking resources as quickly as possible."),(0,o.kt)("li",{parentName:"ul"},"When loading any CSS file, onload event will be fired (only once time) and add all ",(0,o.kt)("strong",{parentName:"li"},"preload")," tags to the necessary JS files")),(0,o.kt)("h3",{id:"root-layout"},"Root layout"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"RenderModule")," has a default root layout that supports different ways of extending and adding functionality"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/references/libs/tinkoff-layout"},"Read more about layout on the library page")),(0,o.kt)("h4",{id:"adding-a-default-header-and-footer"},"Adding a default header and footer"),(0,o.kt)("p",null,"The module allows you to add header and footer components, which will be rendered by default for all pages"),(0,o.kt)("h5",{id:"via-provider"},"Via provider"),(0,o.kt)("p",null,"Register header and footer components through providers:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { DEFAULT_HEADER_COMPONENT, DEFAULT_FOOTER_COMPONENT } from '@tramvai/tokens-render';\nimport { provide } from '@tramvai/core';\n\ncreateApp({\n  providers: [\n    provide({\n      provide: DEFAULT_HEADER_COMPONENT,\n      useValue: DefaultHeader,\n    }),\n    provide({\n      provide: DEFAULT_FOOTER_COMPONENT,\n      useValue: DefaultFooter,\n    }),\n  ],\n});\n")),(0,o.kt)("h5",{id:"via-bundle"},"Via bundle"),(0,o.kt)("p",null,"You can register a ",(0,o.kt)("inlineCode",{parentName:"p"},"headerDefault")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"footerDefault")," component in the bundle, which will be rendered for all routes that do not have ",(0,o.kt)("inlineCode",{parentName:"p"},"headerComponent")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"footerComponent")," redefined in configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"createBundle({\n  name: 'common-bundle',\n  components: {\n    headerDefault: CustomHeader,\n    footerDefault: CustomFooter,\n  },\n});\n")),(0,o.kt)("h4",{id:"adding-components-and-wrappers"},"Adding components and wrappers"),(0,o.kt)("p",null,"You can add custom components and wrappers for layout via the token ",(0,o.kt)("inlineCode",{parentName:"p"},"LAYOUT_OPTIONS"),", this wrappers will be applied on every application page:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { provide } from '@tramvai/core';\n@Module({\n  providers: [\n    provide({\n      provide: 'LAYOUT_OPTIONS',\n      multi: true,\n      useValue: {\n        // React components\n        components: {\n          // content component, this component wraps the header, page and footer\n          content: Content,\n          // page component\n          page: Page,\n\n          // any global components\n          alerts: Alerts,\n          feedback: Feedback,\n        },\n        // HOC's for components\n        wrappers: {\n          layout: layoutWrapper,\n          alerts: [alertWrapper1, alertWrapper2],\n        },\n      },\n    }),\n  ],\n})\nexport class MyLayoutModule {}\n")),(0,o.kt)("p",null,"More details about the ",(0,o.kt)("inlineCode",{parentName:"p"},"components")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"wrappers")," options can be found in ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/libs/tinkoff-layout"},"@tinkoff/layout-factory")),(0,o.kt)("h4",{id:"replacing-the-root-layout"},"Replacing the root layout"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Not recommended, because a lot of dependant features can be broken!")),(0,o.kt)("p",null,"If the basic layout doesn't work for you, you can replace it with any other React component.\nIn doing so, you need to implement all the wrappers yourself and plug in global components if you need them."),(0,o.kt)("p",null,"You can replace it in two ways:"),(0,o.kt)("h5",{id:"add-layoutcomponent-to-route"},"Add layoutComponent to route"),(0,o.kt)("p",null,"You can add a ",(0,o.kt)("inlineCode",{parentName:"p"},"layoutComponent")," property to route ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," and register component in ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle"),".\nThis layout will be rendered when you go to the corresponding route."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"createBundle({\n  name: 'common-bundle',\n  components: {\n    myCustomLayout: CustomLayout,\n  },\n});\n\nconst route = {\n  name: 'main',\n  path: '/',\n  config: {\n    layoutComponent: 'myCustomLayout',\n  },\n};\n")),(0,o.kt)("h5",{id:"replace-layoutdefault"},"Replace layoutDefault"),(0,o.kt)("p",null,"You can register a ",(0,o.kt)("inlineCode",{parentName:"p"},"layoutDefault")," component in ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle"),", which will be automatically rendered for all routes that do not have an ",(0,o.kt)("inlineCode",{parentName:"p"},"layoutComponent")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"createBundle({\n  name: 'common-bundle',\n  components: {\n    layoutDefault: CustomLayout,\n  },\n});\n")),(0,o.kt)("h3",{id:"nested-layout"},"Nested layout"),(0,o.kt)("p",null,"For every page, nested layout can be applied. It is useful when you need to wrap group of pages in the same block, or add the same actions."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"For now, only one level of layout nesting supported, and simplified component structure will look like this:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<RootLayout>\n  <NestedLayout>\n    <Page />\n  </NestedLayout>\n</RootLayout>\n"))),(0,o.kt)("p",null,"Nested layout it is a simple React component with ",(0,o.kt)("inlineCode",{parentName:"p"},"children")," property, and static properties ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"reducers")," are supported:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { NestedLayoutComponent } from '@tramvai/react';\n\nconst Layout: NestedLayoutComponent = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nLayout.actions = [actionFoo, actionBar];\n\nLayout.reducers = [StoreBaz];\n")),(0,o.kt)("p",null,"Actions will be registered as current page component actions and reducers will be registered in global store."),(0,o.kt)("h4",{id:"adding-a-nested-layout"},"Adding a nested layout"),(0,o.kt)("p",null,"You can add a ",(0,o.kt)("inlineCode",{parentName:"p"},"nestedLayoutComponent")," property to route ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," property and register component in ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle"),".\nThis layout will be rendered when you go to the corresponding route."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"createBundle({\n  name: 'common-bundle',\n  components: {\n    myNestedLayout: NestedLayout,\n  },\n});\n\nconst route = {\n  name: 'main',\n  path: '/',\n  config: {\n    nestedLayoutComponent: 'myNestedLayout',\n  },\n};\n")),(0,o.kt)("p",null,"Also, this feature available for ",(0,o.kt)("a",{parentName:"p",href:"/docs/features/routing/file-system-pages"},"File-System Pages and Routes")),(0,o.kt)("h2",{id:"how-to"},"How to"),(0,o.kt)("h3",{id:"how-to-add-assets-loading-to-a-page"},"How to add assets loading to a page"),(0,o.kt)("p",null,"There are 2 main ways how you can add resources to your application"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"RENDER_SLOTS")," token, where you can pass a list of resources, such as HTML markup, inline scripts, script tag"),(0,o.kt)("li",{parentName:"ul"},"Token ",(0,o.kt)("inlineCode",{parentName:"li"},"RESOURCES_REGISTRY")," to get the resource manager, and register the desired resources manually")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("p",null,(0,o.kt)("details",null,(0,o.kt)("summary",null,"Application example"),(0,o.kt)("p",null,(0,o.kt)("pre",{parentName:"p"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\nimport { createApp, createBundle, commandLineListTokens } from '@tramvai/core';\nimport {\n  RENDER_SLOTS,\n  RESOURCES_REGISTRY,\n  ResourceType,\n  ResourceSlot,\n} from '@tramvai/module-render';\nimport { modules } from '../common';\n\nfunction Page() {\n  return <div>Render</div>;\n}\n\nconst bundle = createBundle({\n  name: 'mainDefault',\n  components: {\n    pageDefault: Page,\n  },\n});\n\ncreateApp({\n  name: 'render-add-resources',\n  modules: [...modules],\n  providers: [\n    {\n      // If you want to add your own resources (scripts, styles, images) for loading,\n      // you can use the provider RENDER_SLOTS to add the necessary assets,\n      // all this will then be used in the RenderModule and inserted into HTML\n      provide: RENDER_SLOTS,\n      multi: true,\n      useValue: [\n        {\n          type: ResourceType.inlineScript, // inlineScript wrap payload in tag <script>\n          slot: ResourceSlot.HEAD_CORE_SCRIPTS, // define position where in HTML will be included resource\n          payload: 'alert(\"render\")',\n        },\n        {\n          type: ResourceType.asIs, // asIs just add payload as a string, without special processing\n          slot: ResourceSlot.BODY_TAIL,\n          payload: '<div>hello from render slots</div>',\n        },\n      ],\n    },\n    {\n      provide: commandLineListTokens.resolveUserDeps,\n      multi: true,\n      // You can also add resources separately via DI and the RESOURCES_REGISTRY token\n      useFactory: ({ resourcesRegistry }) => {\n        return function addMyScripts() {\n          resourcesRegistry.register({\n            type: ResourceType.script, // script will create new script tag with src equal to payload\n            slot: ResourceSlot.HEAD_ANALYTICS, // define position where in HTML will be included resource\n            payload: './some-script.js',\n          });\n        };\n      },\n      deps: {\n        resourcesRegistry: RESOURCES_REGISTRY,\n      },\n    },\n  ],\n  bundles: {\n    mainDefault: () => Promise.resolve({ default: bundle }),\n  },\n});\n\n"))))),(0,o.kt)("h3",{id:"react-18-concurrent-features"},"React 18 concurrent features"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"tramvai")," will automatically detect React version, and use hydrateRoot API on the client for 18+ version."),(0,o.kt)("p",null,"Before switch to React 18, we recommended to activate ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/strict-mode.html"},"Strict Mode")," in your application.\nIn Strict Mode which React warns about using the legacy API."),(0,o.kt)("p",null,"To connect, you must configure the ",(0,o.kt)("inlineCode",{parentName:"p"},"RenderModule"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"modules: [\n  RenderModule.forRoot({ useStrictMode: true })\n]\n")),(0,o.kt)("h3",{id:"testing"},"Testing"),(0,o.kt)("h4",{id:"testing-render-extensions-via-render_slots-or-resources_registry-tokens"},"Testing render extensions via RENDER_SLOTS or RESOURCES_REGISTRY tokens"),(0,o.kt)("p",null,"If you have a module or providers that define ",(0,o.kt)("inlineCode",{parentName:"p"},"RENDER_SLOTS")," or use ",(0,o.kt)("inlineCode",{parentName:"p"},"RESOURCES_REGISTRY"),", it is convenient to use special utilities to test them separately"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {\n  RENDER_SLOTS,\n  ResourceSlot,\n  RESOURCES_REGISTRY,\n  ResourceType,\n} from \'@tramvai/tokens-render\';\nimport { testPageResources } from \'@tramvai/module-render/tests\';\nimport { CustomModule } from \'./module\';\nimport { providers } from \'./providers\';\n\ndescribe(\'testPageResources\', () => {\n  it(\'modules\', async () => {\n    const { render } = testPageResources({\n      modules: [CustomModule],\n    });\n    const { head } = render();\n\n    expect(head).toMatchInlineSnapshot(`\n"\n<meta charset=\\\\"UTF-8\\\\">\n<script>console.log(\\\\"from module!\\\\")<\/script>\n"\n`);\n  });\n\n  it(\'providers\', async () => {\n    const { render, runLine } = testPageResources({\n      providers,\n    });\n\n    expect(render().body).toMatchInlineSnapshot(`\n"\n"\n  `);\n\n    await runLine(commandLineListTokens.resolvePageDeps);\n\n    expect(render().body).toMatchInlineSnapshot(`\n"\n<script defer=\\\\"defer\\\\" charset=\\\\"utf-8\\\\" crossorigin=\\\\"anonymous\\\\" src=\\\\"https://scripts.org/script.js\\\\"><\/script>\n<span>I\\`m body!!!</span>\n"\n  `);\n  });\n});\n')),(0,o.kt)("h2",{id:"exported-tokens"},"Exported tokens"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/references/tokens/render"},"link")))}f.isMDXComponent=!0},3121:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/render-module.drawio-135c5da3c2151639eead38825438ab61.svg"}}]);