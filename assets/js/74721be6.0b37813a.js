"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9031],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>d});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),c=l(n),d=s,m=c["".concat(p,".").concat(d)]||c[d]||b[d]||a;return n?r.createElement(m,i(i({ref:t},o),{},{components:n})):r.createElement(m,i({ref:t},o))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=c;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:s,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1496:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>p,metadata:()=>l,toc:()=>o,default:()=>c});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),i=["components"],u={},p=void 0,l={unversionedId:"references/libs/pubsub",id:"references/libs/pubsub",title:"pubsub",description:"Pubsub is a class implementing publisher/subscriber design pattern where messages are sent as promises",source:"@site/tmp-docs/references/libs/pubsub.md",sourceDirName:"references/libs",slug:"/references/libs/pubsub",permalink:"/docs/references/libs/pubsub",editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/libs/pubsub.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"prettier",permalink:"/docs/references/libs/prettier"},next:{title:"react-hooks",permalink:"/docs/references/libs/react-hooks"}},o=[{value:"subscribe - event subscription",id:"subscribe---event-subscription",children:[],level:3},{value:"publish - event publish",id:"publish---event-publish",children:[],level:3},{value:"Typed PubSub",id:"typed-pubsub",children:[],level:2}],b={toc:o};function c(e){var t=e.components,n=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Pubsub is a class implementing publisher/subscriber design pattern where messages are sent as promises"),(0,a.kt)("h3",{id:"subscribe---event-subscription"},"subscribe - event subscription"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pubsub.subscribe('type', callback)")," - subscribe to event with name ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," accepts as arguments payload from ",(0,a.kt)("inlineCode",{parentName:"p"},"pubsub.publish"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," can return promise which will can be awaited from call ",(0,a.kt)("inlineCode",{parentName:"p"},"pubsub.publish"),".",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"pubsub.subscribe")," returns the function to unsubscribe callback from the event."),(0,a.kt)("h3",{id:"publish---event-publish"},"publish - event publish"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pubsub.publish('type', ...args)")," - publish event with name ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," will be passed as arguments to the subscribers. Return promise which will be resolved after resolve of all subscriptions."),(0,a.kt)("h2",{id:"typed-pubsub"},"Typed PubSub"),(0,a.kt)("p",null,"PubSub can use typed events. For example: a common PubSub with many events and subscriptions."),(0,a.kt)("p",null,"In order to enable type checking for event subscriptions:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new type with all event definitions:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type MyAwesomeFeatureEvents = {\n  event1: (payload: number) => any;\n  event2: (payload: { prop: boolean }) => any;\n};\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Do a typecast in code when using PubSub instance. It will enable type checks for every usage for a new typed instance")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const featurePubSub = (pubSub as any) as PubSub<MyAwesomeFeatureEvents>;\n\n// OK! \ud83d\udc4d\nfeaturePubSub.subscribe('event1', (payload) => console.log(1 + payload));\nfeaturePubSub.publish('event1', 2);\n\n// Error \ud83d\udc4e\nfeaturePubSub.subscribe('event3', (payload) => console.log(1 + payload)); // No such event\nfeaturePubSub.publish('event3', 2); // \u041dNo such event\n\nfeaturePubSub.subscribe('event1', (payload) => payload.toLowerCase()); // Wrong payload type\nfeaturePubSub.publish('event1', 'string'); // number expected\n")))}c.isMDXComponent=!0}}]);