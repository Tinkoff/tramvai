"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7591],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,v=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(v,l(l({ref:t},u),{},{components:n})):a.createElement(v,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),o=n(6010),l=n(2389),i=n(7392),s=n(7094),p=n(2466);const u="tabList__CuJ",m="tabItem_LNqP";function c(e){var t,n,l=e.lazy,c=e.block,d=e.defaultValue,v=e.values,f=e.groupId,k=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=v?v:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,i.l)(b,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===d?d:null!=(t=null!=d?d:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==h&&!b.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),T=N.tabGroupChoices,P=N.setTabGroupChoices,x=(0,r.useState)(h),w=x[0],C=x[1],O=[],E=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var I=T[f];null!=I&&I!==w&&b.some((function(e){return e.value===I}))&&C(I)}var Z=function(e){var t=e.currentTarget,n=O.indexOf(t),a=b[n].value;a!==w&&(E(t),C(a),null!=f&&P(f,String(a)))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;n=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var o,l=O.indexOf(e.currentTarget)-1;n=null!=(o=O[l])?o:O[O.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":c},k)},b.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return O.push(e)},onKeyDown:S,onFocus:Z,onClick:Z},l,{className:(0,o.Z)("tabs__item",m,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),l?(0,r.cloneElement)(g.filter((function(e){return e.props.value===w}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,l.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},5214:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>p,metadata:()=>m,toc:()=>d});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(5488),i=n(5162),s=["components"],p={},u=void 0,m={unversionedId:"references/tramvai/storybook-addon",id:"references/tramvai/storybook-addon",title:"storybook-addon",description:"Storybook addon for tramvai apps",source:"@site/tmp-docs/references/tramvai/storybook-addon.md",sourceDirName:"references/tramvai",slug:"/references/tramvai/storybook-addon",permalink:"/docs/references/tramvai/storybook-addon",draft:!1,editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/tramvai/storybook-addon.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"unit",permalink:"/docs/references/tramvai/test/unit"},next:{title:"base",permalink:"/docs/references/cli/base"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Features",id:"features",level:2},{value:"How to",id:"how-to",level:2},{value:"Access to DI container",id:"access-to-di-container",level:3},{value:"Router hooks and components",id:"router-hooks-and-components",level:3},{value:"React Query",id:"react-query",level:3},{value:"Page actions running",id:"page-actions-running",level:3},{value:"Http clients with real requests",id:"http-clients-with-real-requests",level:3},{value:"How to provide environment variables?",id:"how-to-provide-environment-variables",level:3},{value:"Contribute",id:"contribute",level:2}],v={toc:d};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Storybook addon for tramvai apps"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You need to install ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/storybook-addon"),":"),(0,o.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @tramvai/storybook-addon\n"))),(0,o.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @tramvai/storybook-addon\n")))),(0,o.kt)("p",null,"And connect addon in the storybook configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".storybook/main.js"',title:'".storybook/main.js"'},'module.exports = {\n  addons: ["@tramvai/storybook-addon"]\n}\n')),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Providers for DI container"),(0,o.kt)("li",{parentName:"ul"},"Providers for router"),(0,o.kt)("li",{parentName:"ul"},"Providers for ",(0,o.kt)("inlineCode",{parentName:"li"},"react-query")),(0,o.kt)("li",{parentName:"ul"},"Page actions support"),(0,o.kt)("li",{parentName:"ul"},"tramvai ",(0,o.kt)("inlineCode",{parentName:"li"},"babel")," configuration"),(0,o.kt)("li",{parentName:"ul"},"tramvai ",(0,o.kt)("inlineCode",{parentName:"li"},"postcss")," configuration")),(0,o.kt)("h2",{id:"how-to"},"How to"),(0,o.kt)("h3",{id:"access-to-di-container"},"Access to DI container"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"page",label:"page.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { LOGGER_TOKEN } from '@tramvai/tokens-common';\n\nexport const Page = () => {\n  const logger = useDi(LOGGER_TOKEN);\n\n  logger.info('render');\n\n  return (\n    <h1>Page</h1>\n  );\n}\n"))),(0,o.kt)(i.Z,{value:"story",label:"page.stories.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { TramvaiStoriesParameters } from '@tramvai/storybook-addon';\nimport { Page } from './page';\n\n// You can pass to DI container any reducers, providers and modules\nconst parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    stores: [],\n    initialState: {},\n    providers: [],\n    modules: [],\n  },\n};\n\nexport default {\n  title: 'Page',\n  component: Page,\n  parameters,\n};\n\nexport const PageStory = () => <Page />;\n")))),(0,o.kt)("h3",{id:"router-hooks-and-components"},"Router hooks and components"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"page",label:"page.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Link, useUrl } from '@tramvai/module-router';\n\nexport const Page = () => {\n  const url = useUrl();\n\n  return (\n    <>\n      <h1>Page at {url.pathname}</h1>\n      <p>\n        <Link url=\"/third/\">to third page</Link>\n      </p>\n    </>\n  );\n}\n"))),(0,o.kt)(i.Z,{value:"story",label:"page.stories.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { TramvaiStoriesParameters } from '@tramvai/storybook-addon';\nimport { Page } from './page';\n\n// You can pass to router current route and url\nconst parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    currentRoute: { name: 'second', path: '/second/' },\n  },\n};\n\nexport default {\n  title: 'Page',\n  component: Page,\n  parameters,\n};\n\nexport const PageStory = () => <Page />;\n")))),(0,o.kt)("h3",{id:"react-query"},"React Query"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"page",label:"page.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createQuery, useQuery } from '@tramvai/react-query';\n\n\nconst query = createQuery({\n  key: 'base',\n  fn: async () => {\n    return { foo: 'bar' };\n  },\n});\n\nexport const Page = () => {\n  const { data, isLoading } = useQuery(query);\n\n  return (\n    <>\n      <h1>Page</h1>\n      <p>\n        {isLoading ? 'Loading...' : data.foo}\n      </p>\n    </>\n  );\n}\n"))),(0,o.kt)(i.Z,{value:"story",label:"page.stories.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { TramvaiStoriesParameters } from '@tramvai/storybook-addon';\nimport { Page } from './page';\n\n// You can pass to router QueryClient default options\nconst parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    reactQueryDefaultOptions: {\n      queries: {\n        refetchOnMount: false,\n        refetchOnReconnect: false,\n        refetchOnWindowFocus: false,\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Page',\n  component: Page,\n  parameters,\n};\n\nexport const PageStory = () => <Page />;\n")))),(0,o.kt)("h3",{id:"page-actions-running"},"Page actions running"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"page",label:"page.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { declareAction } from '@tramvai/core';\n\nconst serverAction = declareAction({\n  name: 'server-action',\n  fn() {\n    console.log('server action');\n  },\n  conditions: {\n    onlyServer: true,\n  },\n});\n\nconst browserAction = declareAction({\n  name: 'browser-action',\n  fn() {\n    console.log('browser action');\n  },\n  conditions: {\n    onlyBrowser: true,\n  },\n});\n\nexport const Page = () => {\n  return (\n    <h1>Page</h1>\n  );\n}\n\nPage.actions = [serverAction, browserAction];\n"))),(0,o.kt)(i.Z,{value:"story",label:"page.stories.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import type { TramvaiStoriesParameters } from '@tramvai/storybook-addon';\nimport { Page } from './page';\n\n// Actions with `onlyBrowser` condition will be executed\nconst parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    actions: Page.actions,\n  },\n};\n\nexport default {\n  title: 'Page',\n  component: Page,\n  parameters,\n};\n\nexport const PageStory = () => <Page />;\n")))),(0,o.kt)("h3",{id:"http-clients-with-real-requests"},"Http clients with real requests"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"page",label:"page.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { declareAction } from '@tramvai/core';\n\nconst httpRequestAction = declareAction({\n  name: 'http-request-action',\n  async fn() {\n    return this.deps.httpClient.get('/');\n  },\n  deps: {\n    httpClient: HTTP_CLIENT,\n  },\n});\n\nexport const Page = () => {\n  return (\n    <h1>Page</h1>\n  );\n}\n\nPage.actions = [httpRequestAction];\n"))),(0,o.kt)(i.Z,{value:"story",label:"page.stories.tsx",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { HttpClientModule } from '@tramvai/module-http-client';\nimport type { TramvaiStoriesParameters } from '@tramvai/storybook-addon';\nimport { Page } from './page';\n\n// HttpClientModule is required for real requests\nconst parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    actions: Page.actions,\n    modules: [HttpClientModule],\n  },\n};\n\nexport default {\n  title: 'Page',\n  component: Page,\n  parameters,\n};\n\nexport const PageStory = () => <Page />;\n")))),(0,o.kt)("h3",{id:"how-to-provide-environment-variables"},"How to provide environment variables?"),(0,o.kt)("p",null,"This addon provides a few important defaults:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Mock provider for ",(0,o.kt)("inlineCode",{parentName:"li"},"ENV_MANAGER_TOKEN")),(0,o.kt)("li",{parentName:"ul"},"Read ",(0,o.kt)("inlineCode",{parentName:"li"},"env.development.js")," content from application root")),(0,o.kt)("p",null,"So, any variables from ",(0,o.kt)("inlineCode",{parentName:"p"},"env.development.js")," will be registered in ",(0,o.kt)("inlineCode",{parentName:"p"},"envManager"),"."),(0,o.kt)("p",null,"If you want to add custom variables for some stories, pass ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"CommonTestModule")," (from ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/test-mocks")," package) in story parameters:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const parameters: TramvaiStoriesParameters = {\n  tramvai: {\n    options: {\n      env: {\n        FOO: 'BAR',\n      },\n    },\n  },\n};\n")),(0,o.kt)("h2",{id:"contribute"},"Contribute"),(0,o.kt)("p",null,"For testing changes in this plugin locally, you need a few steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"[tramvai repo]"," Copy ",(0,o.kt)("inlineCode",{parentName:"li"},"examples-standalone/storybook")," application to different folder, e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"storybook-app")),(0,o.kt)("li",{parentName:"ol"},"[storybook-app]"," run ",(0,o.kt)("inlineCode",{parentName:"li"},"git init")," in this folder (",(0,o.kt)("inlineCode",{parentName:"li"},"@storybook/builder-webpack5")," uses as root the first parent directory containing ",(0,o.kt)("inlineCode",{parentName:"li"},".git")," folder)"),(0,o.kt)("li",{parentName:"ol"},"[storybook-app]"," Update there all ",(0,o.kt)("inlineCode",{parentName:"li"},"tramvai")," dependencies in ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json")),(0,o.kt)("li",{parentName:"ol"},"[tramvai repo]"," Copy plugin build output from ",(0,o.kt)("inlineCode",{parentName:"li"},"packages/tramvai/storybook-addon/lib")),(0,o.kt)("li",{parentName:"ol"},"[storybook-app]"," Paste into the ",(0,o.kt)("inlineCode",{parentName:"li"},"storybook-app/node_modules/@tramvai/storybook-addon/lib")," folder"),(0,o.kt)("li",{parentName:"ol"},"[storybook-app]"," Run ",(0,o.kt)("inlineCode",{parentName:"li"},"storybook")," in nested folder ",(0,o.kt)("inlineCode",{parentName:"li"},"cd storybook && npm run storybook"))))}f.isMDXComponent=!0}}]);