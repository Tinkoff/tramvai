"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5762],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},f=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,f=p(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return n?r.createElement(m,o(o({ref:t},f),{},{components:n})):r.createElement(m,o({ref:t},f))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5197:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],p={},l=void 0,s={unversionedId:"references/libs/tinkoff-request-http-client-adapter",id:"references/libs/tinkoff-request-http-client-adapter",title:"tinkoff-request-http-client-adapter",description:"Interface implementation HttpClient from @tramvai/http-client based on the library @tinkoff/request",source:"@site/tmp-docs/references/libs/tinkoff-request-http-client-adapter.md",sourceDirName:"references/libs",slug:"/references/libs/tinkoff-request-http-client-adapter",permalink:"/docs/references/libs/tinkoff-request-http-client-adapter",draft:!1,editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/libs/tinkoff-request-http-client-adapter.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"tinkoff-layout",permalink:"/docs/references/libs/tinkoff-layout"},next:{title:"url",permalink:"/docs/references/libs/url"}},f={},c=[{value:"API",id:"api",level:2},{value:"createAdapter",id:"createadapter",level:3},{value:"TinkoffRequestOptions",id:"tinkoffrequestoptions",level:3},{value:"createTinkoffRequest",id:"createtinkoffrequest",level:3},{value:"HttpClientAdapter",id:"httpclientadapter",level:3},{value:"mergeOptions",id:"mergeoptions",level:3}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Interface implementation ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClient")," from ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/libs/http-client"},"@tramvai/http-client")," based on the library ",(0,i.kt)("a",{parentName:"p",href:"https://tinkoff.github.io/tinkoff-request/"},"@tinkoff/request")),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"createadapter"},"createAdapter"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createAdapter")," - factory to create an HTTP client. It configures an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"@tinkoff/request")," via ",(0,i.kt)("inlineCode",{parentName:"p"},"createTinkoffRequest"),", and based on it creates an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClientAdapter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type createAdapter = (options: TinkoffRequestOptions) => HttpClient;\n")),(0,i.kt)("h3",{id:"tinkoffrequestoptions"},"TinkoffRequestOptions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"interface TinkoffRequestOptions extends HttpClientRequest {\n  // tramvai logger\n  logger?: typeof LOGGER_TOKEN;\n  // namespace for the logger, the prefix `request.` will be added to it\n  name?: string;\n  // will disable the default caching via `@tinkoff/request-plugin-cache-memory`\n  disableCache?: boolean;\n  // cache factory for `@tinkoff/request-plugin-cache-memory`\n  createCache?: (options: any) => any;\n  // cache ttl for `@tinkoff/request-plugin-cache-memory`\n  cacheTime?: number;\n  // the default request execution time limit, in ms\n  defaultTimeout?: number;\n  // response validator for `@tinkoff/request-plugin-validate`\n  validator?: RequestValidator;\n  // error validator for `@tinkoff/request-plugin-validate`\n  errorValidator?: RequestValidator;\n  // method allows you to modify the error object before sending logs from `@tinkoff/request-plugin-log`\n  errorModificator?: RequestValidator;\n}\n")),(0,i.kt)("h3",{id:"createtinkoffrequest"},"createTinkoffRequest"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createTinkoffRequest")," - creates an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"@tinkoff/request")," with all the necessary plugins"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type createTinkoffRequest = (options: TinkoffRequestOptions) => MakeRequest;\n")),(0,i.kt)("h3",{id:"httpclientadapter"},"HttpClientAdapter"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HttpClientAdapter")," - adapts ",(0,i.kt)("inlineCode",{parentName:"p"},"@tinkoff/request")," to the interface ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClient"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"request")," method wraps the request parameters in the ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyRequest")," option, and passes them to ",(0,i.kt)("inlineCode",{parentName:"p"},"@tinkoff/request"),". Then, the received response is modified in the ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClientRequest"),", and wrapped in the ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyResponse")," option. If there is an error, it will wrapped into the ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyError")," option."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"fork")," method creates a new instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClientAdapter"),", but with the same ",(0,i.kt)("inlineCode",{parentName:"p"},"@tinkoff/request")," instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type HttpClientAdapter = HttpClient;\n")),(0,i.kt)("h3",{id:"mergeoptions"},"mergeOptions"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"mergeOptions")," compose ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyRequest"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyResponse")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyError")," options, with the corresponding options from ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," being executed first, then from ",(0,i.kt)("inlineCode",{parentName:"p"},"nextOptions"),". If you pass a third parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"{ replace: true }"),", all parameters of the same name from ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," will simply be overwritten by parameters from ",(0,i.kt)("inlineCode",{parentName:"p"},"nextOptions")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type mergeOptions = (\n  options: HttpClientRequest,\n  nextOptions: HttpClientRequest,\n  config?: { replace?: boolean }\n) => HttpClientRequest;\n")))}u.isMDXComponent=!0}}]);