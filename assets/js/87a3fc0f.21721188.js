"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9258],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>s});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),s=o,h=m["".concat(d,".").concat(s)]||m[s]||u[s]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={id:"how-create-module",title:"How to create a module?"},d=void 0,p={unversionedId:"how-to/how-create-module",id:"how-to/how-create-module",title:"How to create a module?",description:"Let's use a case study: we have the task of creating a module that, for each client, puts X-Frame-Options header",source:"@site/tmp-docs/how-to/how-create-module.md",sourceDirName:"how-to",slug:"/how-to/how-create-module",permalink:"/tramvai/docs/how-to/how-create-module",draft:!1,editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/how-to/how-create-module.md",tags:[],version:"current",frontMatter:{id:"how-create-module",title:"How to create a module?"},sidebar:"sidebar",previous:{title:"How to create Child App?",permalink:"/tramvai/docs/how-to/how-create-child-app"},next:{title:"How to create a papi handler?",permalink:"/tramvai/docs/how-to/how-create-papi"}},c={},u=[{value:"Create an empty module",id:"create-an-empty-module",level:3},{value:"Adding providers",id:"adding-providers",level:3},{value:"Include our new module in the application",id:"include-our-new-module-in-the-application",level:3},{value:"Summary",id:"summary",level:3}],m={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Let's use a case study: we have the task of creating a module that, for each client, puts ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Frame-Options")," header"),(0,r.kt)("p",null,"In general, the creation of a module can be divided into several stages:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create an empty module"),(0,r.kt)("li",{parentName:"ol"},"Add the necessary providers"),(0,r.kt)("li",{parentName:"ol"},"Include the module into the application")),(0,r.kt)("h3",{id:"create-an-empty-module"},"Create an empty module"),(0,r.kt)("p",null,"We create a basic module, to do this we create an empty class ",(0,r.kt)("inlineCode",{parentName:"p"},"SecurityModule")," and connect the decorator ",(0,r.kt)("inlineCode",{parentName:"p"},"Module")," which is required for modules and in which we will add integrations with the application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Module } from '@tramvai/core';\n\n@Module({\n  providers: [],\n})\nexport class SecurityModule {}\n")),(0,r.kt)("p",null,"The module can already be plugged into the application, but it won't do anything."),(0,r.kt)("h3",{id:"adding-providers"},"Adding providers"),(0,r.kt)("p",null,"To do this we need to add providers in the ",(0,r.kt)("inlineCode",{parentName:"p"},"providers")," field. We had the task to add the headers, for that we will use ",(0,r.kt)("inlineCode",{parentName:"p"},"commandLineListTokens")," to perform actions for each client and we will use ",(0,r.kt)("inlineCode",{parentName:"p"},"responseManager")," to which we can write the information about the headers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Module, commandLineListTokens, RESPONSE_MANAGER_TOKEN, provide } from '@tramvai/core';\n\n@Module({\n  providers: [\n    provide({\n      provide: commandLineListTokens.resolvePageDeps,\n      multi: true,\n      useFactory: ({ responseManager }: { responseManager: typeof RESPONSE_MANAGER_TOKEN }) =>\n        function securityHeader() {\n          responseManager.setHeader('X-Frame-Options', 'sameorigin');\n        },\n      deps: {\n        responseManager: RESPONSE_MANAGER_TOKEN,\n      },\n    }),\n  ],\n})\nexport class SecurityModule {}\n")),(0,r.kt)("p",null,"We have implemented a new multi-provider that has dependencies and is created through ",(0,r.kt)("inlineCode",{parentName:"p"},"useFactory")),(0,r.kt)("p",null,"After plugging the module into the application, for each client the ",(0,r.kt)("inlineCode",{parentName:"p"},"useFactory")," function will be executed first with the ",(0,r.kt)("inlineCode",{parentName:"p"},"deps")," passed and then the ",(0,r.kt)("inlineCode",{parentName:"p"},"securityHeader")," function will be called, in which we will write the data into the obtained dependency and thus fulfill our goal."),(0,r.kt)("h3",{id:"include-our-new-module-in-the-application"},"Include our new module in the application"),(0,r.kt)("p",null,"Now it remains to plug the module into the application so that it can add its implementation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createApp } from '@tramvai/core';\nimport { SecurityModule } from '@tramvai/module-security';\n\ncreateApp({\n  modules: [SecurityModule],\n});\n")),(0,r.kt)("p",null,"We can add the module not only to the application, but also to another module. To do this, we need to pass in the ",(0,r.kt)("inlineCode",{parentName:"p"},"imports")," block and then when the ",(0,r.kt)("inlineCode",{parentName:"p"},"MyCommonModule")," is connected, the ",(0,r.kt)("inlineCode",{parentName:"p"},"SecurityModule")," will also be automatically connected"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Module } from '@tramvai/core';\nimport { SecurityModule } from '@tramvai/module-security';\n\n@Module({\n  imports: [SecurityModule],\n  providers: [],\n})\nexport class MyCommonModule {}\n")),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"SecurityModule")," was created, which will be called for each client and will add the necessary headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/tramvai/docs/concepts/module"},"Documentation about modules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/tramvai/docs/references/tramvai/core#createApp"},"Documentation about createApp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/tramvai/docs/concepts/di"},"Documentation about DI"))))}s.isMDXComponent=!0}}]);