"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5462],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>u});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},l=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,c=n.parentName,l=a(n,["components","mdxType","originalType","parentName"]),m=s(t),u=o,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return t?r.createElement(f,p(p({ref:e},l),{},{components:t})):r.createElement(f,p({ref:e},l))}));function u(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,p=new Array(i);p[0]=m;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=n,a.mdxType="string"==typeof n?n:o,p[1]=a;for(var s=2;s<i;s++)p[s]=t[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5645:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),p=["components"],a={},c=void 0,s={unversionedId:"references/tokens/child-app",id:"references/tokens/child-app",title:"child-app",description:"@inline src/index.ts",source:"@site/tmp-docs/references/tokens/child-app.md",sourceDirName:"references/tokens",slug:"/references/tokens/child-app",permalink:"/docs/references/tokens/child-app",draft:!1,editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/tokens/child-app.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"server",permalink:"/docs/references/modules/server"},next:{title:"common",permalink:"/docs/references/tokens/common"}},l={},d=[],m={toc:d};function u(n){var e=n.components,t=(0,o.Z)(n,p);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("pre",{parentName:"p"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { ComponentType } from 'react';\nimport { createToken } from '@tinkoff/dippy';\nimport type { Action, Command, TramvaiAction } from '@tramvai/core';\nimport type { INITIAL_APP_STATE_TOKEN } from '@tramvai/tokens-common';\nimport type { StoreClass } from '@tramvai/state';\nimport type {\n  ChildAppLoader,\n  ChildAppDiManager,\n  ChildAppPreloadManager,\n  ChildAppCommandLineRunner,\n  ChildAppRequestConfig,\n  WrapperProps,\n  RootStateSubscription,\n  ChildAppStateManager,\n  ChildAppFinalConfig,\n  ChildAppRenderManager,\n  ChildAppResolutionConfig,\n  ResolutionConfig,\n} from './types';\n\nexport * from './types';\n\nconst multiOptions = { multi: true } as const;\n\n/**\n * @public\n * @description CommandLineRunner steps specific for child app\n */\nexport const commandLineListTokens = {\n  // section: client processing\n  customerStart: createToken<Command>('child-app customer_start', multiOptions), // \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n  resolveUserDeps: createToken<Command>('child-app resolve_user_deps', multiOptions), // \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0435\n  resolvePageDeps: createToken<Command>('child-app resolve_page_deps', multiOptions), // \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0434\u043b\u044f \u0440\u043e\u0443\u0442\u0430\n\n  // section: clear data\n  clear: createToken<Command>('child-app clear', multiOptions), // \u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n\n  // section: spa transitions\n  spaTransition: createToken<Command>('child-app spa_transition', multiOptions),\n\n  // section: after spa transitions\n  afterSpaTransition: createToken<Command>('child-app after_spa_transition', multiOptions),\n};\n\n/**\n * @public\n * @description Contains child app configs that was used to figure out how to load child apps\n */\nexport const CHILD_APP_RESOLUTION_CONFIGS_TOKEN = createToken<\n  | ChildAppResolutionConfig\n  | ChildAppResolutionConfig[]\n  | (() => ChildAppResolutionConfig | ChildAppResolutionConfig[])\n>('child-app resolve configs', multiOptions);\n\n/**\n * @public\n * @description Used to resolve and extend resolution configs for child-apps\n */\nexport const CHILD_APP_RESOLUTION_CONFIG_MANAGER_TOKEN = createToken<{\n  resolve(config: ChildAppRequestConfig): ResolutionConfig | null;\n  init(): Promise<void>;\n}>('child-app resolution config manager');\n\n/**\n * @public\n * @description Used to resolve external config with urls to external code entries\n */\nexport const CHILD_APP_RESOLVE_CONFIG_TOKEN = createToken<\n  (config: ChildAppRequestConfig) => ChildAppFinalConfig\n>('child-app resolve external config');\n\n/**\n * @public\n * @description Base url for external urls for child apps on client\n */\nexport const CHILD_APP_RESOLVE_BASE_URL_TOKEN = createToken<string>(\n  'child-app resolve external base url'\n);\n\n/**\n * @public\n * @description Allows to preload child app for the specific page\n */\nexport const CHILD_APP_PRELOAD_MANAGER_TOKEN = createToken<ChildAppPreloadManager>(\n  'child-app preload manager'\n);\n\n/**\n * @public\n * @description Contains child app config that was used to load current child app\n */\nexport const CHILD_APP_INTERNAL_CONFIG_TOKEN = createToken<ChildAppFinalConfig>(\n  'child-app current config'\n);\n\n/**\n * @public\n * @description Actions of child app\n */\nexport const CHILD_APP_INTERNAL_ACTION_TOKEN = createToken<\n  Action | TramvaiAction<any[], any, any> | (Action | TramvaiAction<any[], any, any>)[]\n>('child-app action', multiOptions);\n\n/**\n * @deprecated use CHILD_APP_INTERNAL_ROOT_STATE_ALLOWED_STORE_TOKEN\n * @public\n * @description Subscription on a root state updates\n */\nexport const CHILD_APP_INTERNAL_ROOT_STATE_SUBSCRIPTION_TOKEN = createToken<RootStateSubscription>(\n  'child-app root state subscription',\n  multiOptions\n);\n\n/**\n * @public\n * @description Root-app stores that might be used inside child-app\n */\nexport const CHILD_APP_INTERNAL_ROOT_STATE_ALLOWED_STORE_TOKEN = createToken<StoreClass | string>(\n  'child-app root state allowed store',\n  multiOptions\n);\n\n/**\n * @public\n * @description Allows to recreate token implementation the same way as in root di, but specific to child-app di\n */\nexport const CHILD_APP_INTERNAL_ROOT_DI_BORROW_TOKEN = createToken<any>(\n  'child-app root di borrow',\n  multiOptions\n);\n\n/**\n * @private\n * @description boolean flag indicating that current di if for a child-app\n */\nexport const IS_CHILD_APP_DI_TOKEN = createToken<boolean>('child-app isChildApp Di');\n\n/**\n * @private\n * @description Manages Singleton-Scope DIs for every child app\n */\nexport const CHILD_APP_SINGLETON_DI_MANAGER_TOKEN = createToken<ChildAppDiManager>(\n  'child-app singleton di manager'\n);\n\n/**\n * @private\n * @description Manages Request-Scope DIs for every child app\n */\nexport const CHILD_APP_DI_MANAGER_TOKEN = createToken<ChildAppDiManager>('child-app di manager');\n\n/**\n * @private\n * @description Bridge from React render to di providers for child apps\n */\nexport const CHILD_APP_RENDER_MANAGER_TOKEN = createToken<ChildAppRenderManager>(\n  'child-app render manager'\n);\n\n/**\n * @private\n * @description Manages state dehydration for child-app\n */\nexport const CHILD_APP_STATE_MANAGER_TOKEN =\n  createToken<ChildAppStateManager>('child-app state manager');\n\n/**\n * @private\n * @description Manages loading child-app resources from the external place\n */\nexport const CHILD_APP_LOADER_TOKEN = createToken<ChildAppLoader>('child-app loader');\n\n/**\n * @private\n * @description Implements CommandLineRunner for child apps\n */\nexport const CHILD_APP_COMMAND_LINE_RUNNER_TOKEN = createToken<ChildAppCommandLineRunner>(\n  'child-app command runner'\n);\n\n/**\n * @private\n * @description Stores the common server-dehydrated state for all of child apps\n */\nexport const CHILD_APP_COMMON_INITIAL_STATE_TOKEN = createToken<\n  Record<string, typeof INITIAL_APP_STATE_TOKEN>\n>('child-app initialAppState');\n\n/**\n * @private\n * @description Used as render function for a child app. Usually implemented as a wrapper over child app render itself with an additional logic for di and connections to root app\n */\nexport const CHILD_APP_INTERNAL_RENDER_TOKEN =\n  createToken<ComponentType<WrapperProps<any>>>('child-app render');\n\n"))))}u.isMDXComponent=!0}}]);