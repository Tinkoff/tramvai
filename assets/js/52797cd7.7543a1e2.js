"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2258],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,k=u["".concat(d,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3073:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>d,metadata:()=>c,toc:()=>s,default:()=>u});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={title:"@tramvai/core",sidebar_position:1},d=void 0,c={unversionedId:"references/tramvai/core",id:"references/tramvai/core",title:"@tramvai/core",description:"\u042f\u0434\u0440\u043e tramvai. \u0412 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0442\u0440\u0430\u043c\u0432\u0430\u044f.",source:"@site/tmp-docs/references/tramvai/core.md",sourceDirName:"references/tramvai",slug:"/references/tramvai/core",permalink:"/docs/references/tramvai/core",editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/tramvai/core.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"@tramvai/core",sidebar_position:1},sidebar:"sidebar",previous:{title:"How to update tramvai?",permalink:"/docs/how-to/tramvai-update"},next:{title:"@tramvai/react",permalink:"/docs/references/tramvai/react"}},s=[{value:"API",id:"api",children:[{value:"createApp",id:"createapp",children:[{value:"createApp({ modules, bundles, providers })",id:"createapp-modules-bundles-providers-",children:[],level:4},{value:"Usage",id:"usage",children:[],level:4}],level:3},{value:"Module",id:"module",children:[{value:"@Module({ providers, deps, imports })(class)",id:"module-providers-deps-imports-class",children:[],level:4},{value:"Usage",id:"usage-1",children:[],level:4}],level:3},{value:"declareAction",id:"declareaction",children:[{value:"declareAction({ name, fn, deps, conditions })",id:"declareaction-name-fn-deps-conditions-",children:[],level:4},{value:"Action Execution Context",id:"action-execution-context",children:[],level:4},{value:"conditionsFailResult",id:"conditionsfailresult",children:[],level:4},{value:"Usage example",id:"usage-example",children:[],level:4}],level:3},{value:"createBundle",id:"createbundle",children:[{value:"Properties BundleOptions",id:"properties-bundleoptions",children:[],level:4},{value:"Usage",id:"usage-2",children:[],level:4}],level:3}],level:2},{value:"Exported tokens",id:"exported-tokens",children:[{value:"DI_TOKEN",id:"di_token",children:[],level:3},{value:"APP_INFO_TOKEN",id:"app_info_token",children:[],level:3},{value:"COMMAND_LINE_RUNNER_TOKEN",id:"command_line_runner_token",children:[],level:3},{value:"COMMAND_LINES_TOKEN",id:"command_lines_token",children:[],level:3}],level:2}],p={toc:s};function u(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u042f\u0434\u0440\u043e tramvai. \u0412 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0442\u0440\u0430\u043c\u0432\u0430\u044f."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"createapp"},"createApp"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createApp")," - configuring, creating and running the application"),(0,r.kt)("h4",{id:"createapp-modules-bundles-providers-"},"createApp({ modules, bundles, providers })"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modules")," - array with used ",(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/module"},"modules")," in the application"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bundles")," - object with used bundles with data in the application. The key is the bundle identifier, the value is ",(0,r.kt)("inlineCode",{parentName:"li"},"Promise")," which returns the bundle"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"providers")," - an array with application providers, which will be added last in the DI (after module providers) and thus it will be possible to overwrite the implementation of the tokens"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"actions")," - array with global ",(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/action"},"actions"),", which will be registered for all bundles and pages")),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createApp, provide } from '@tramvai/core';\nimport { RouterModule } from '@tramvai/module-router';\nimport { RenderModule } from '@tramvai/module-render';\nimport { ServerModule } from '@tramvai/module-server';\n\ncreateApp({\n  name: 'my-awesome-app',\n  modules: [RouterModule, RenderModule, ServerModule],\n  providers: [\n    provide({\n      provide: 'options',\n      useValue: {},\n    }),\n  ],\n  bundles: {\n    mainDefault: () => import(/* webpackChunkName: \"mainDefault\" */ './bundles/mainDefault'),\n  },\n  actions: [loadDepositConfig],\n});\n")),(0,r.kt)("p",null,"After calling createApp, ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/command-line-runner"},"\u0421ommandLineRunner")," is started which performs the chain of actions necessary to initialize the application."),(0,r.kt)("h3",{id:"module"},"Module"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Module")," - Decorator for configuring and creating a module."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/module"},"Read more about modules")),(0,r.kt)("h4",{id:"module-providers-deps-imports-class"},"@Module({ providers, deps, imports })(class)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"providers")," - ",(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/provider"},"Providers"),", which will be added to the root DI container and become available in other modules"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deps")," - List of dependencies from the DI container, necessary to initialize the module"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"imports")," - A list of modules from which providers will be obtained and added to the DI. Allows you to create modules that combine many other modules")),(0,r.kt)("h4",{id:"usage-1"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Module, provide } from '@tramvai/core';\n\n@Module({\n  providers: [\n    provide({\n      provide: 'token',\n      useValue: 'value-in-token',\n    }),\n  ],\n  deps: {\n    logger: 'logger',\n  },\n  imports: [ModuleLogger],\n})\nclass ModulePubSub {\n  constructor({ logger }) {\n    logger.info('Module create');\n  }\n}\n")),(0,r.kt)("h3",{id:"declareaction"},"declareAction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"declareAction")," - Method for creating asynchronous actions. It is used both for building chains of sagas and for performing global actions when building a response to a client"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/action"},"More about actions")),(0,r.kt)("h4",{id:"declareaction-name-fn-deps-conditions-"},"declareAction({ name, fn, deps, conditions })"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - The name of the action, a unique identifier is expected"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fn(...params)")," - Implementation of the action, this function will be called when the action is used, maybe ",(0,r.kt)("inlineCode",{parentName:"li"},"async"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"this")," - action execution context that contains some helper functions and resolved deps"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"params")," - data passed to action"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deps")," - List of providers that are needed for the action to work"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"conditions")," - List of restrictions for the execution of the action"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"conditionsFailResult")," - ",(0,r.kt)("a",{parentName:"li",href:"#conditionsfailresult"},"see"))),(0,r.kt)("h4",{id:"action-execution-context"},"Action Execution Context"),(0,r.kt)("p",null,"Action execution context that contains some helper functions and resolved deps"),(0,r.kt)("p",null,"Context has next fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deps")," - resolved deps that were specified when declaring action"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"executeAction")," - allows to execute another actions inside current one"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getState")," - quick access to ",(0,r.kt)("inlineCode",{parentName:"li"},"STORE_TOKEN.getState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dispatch")," - quick access to ",(0,r.kt)("inlineCode",{parentName:"li"},"STORE_TOKEN.dispatch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"abortSignal")," - instance of signal related to the current execution tree"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"abortController")," - instance of ",(0,r.kt)("inlineCode",{parentName:"li"},"AbortController")," created exclusively for the current action execution")),(0,r.kt)("h4",{id:"conditionsfailresult"},"conditionsFailResult"),(0,r.kt)("p",null,"Specifies the output of the action in case its ",(0,r.kt)("inlineCode",{parentName:"p"},"conditions")," was not met during execution."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If ",(0,r.kt)("inlineCode",{parentName:"p"},"conditions")," are not met for action, action's ",(0,r.kt)("inlineCode",{parentName:"p"},"fn")," won't be executed in any way")),(0,r.kt)("p",null,"Possible values for the ",(0,r.kt)("inlineCode",{parentName:"p"},"conditionsFailResult"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"empty")," - (default) execution will be resolved with ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," as a result"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"error")," - execution will be rejected with ",(0,r.kt)("a",{parentName:"li",href:"/docs/references/libs/errors#conditionfailerror"},"ConditionFailError"))),(0,r.kt)("h4",{id:"usage-example"},"Usage example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { declareAction } from '@tramvai/core';\n\ndeclareAction({\n  name: 'action log error',\n  fn(payload) {\n    this.deps.logger.error('ERROR');\n  },\n  deps: {\n    logger: 'logger',\n  },\n  conditions: {\n    requiredCoreRoles: ['god'],\n  },\n});\n")),(0,r.kt)("p",null,"abort execution:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const innerAction = declareAction(/** ... */);\n\nconst action = declareAction({\n  name: 'root',\n  async fn() {\n    setTimeout(() => {\n      this.abortController.abort()\n    }, 4000);\n\n    const { payload } = await this.deps.httpClient.request({\n      url: 'https://www.domain.com/api/endpoint',\n      // pass signal to the request\n      signal: this.abortSignal,\n    });\n\n    // if innerAction1 will end after abortController.abort was called\n    // then calling innerAction2 will throw an instance of ExecutionAbortError\n    await this.executeAction(innerAction, payload);\n  },\n  deps: {\n    httpClient: HTTP_CLIENT,\n  },\n});\n")),(0,r.kt)("h3",{id:"createbundle"},"createBundle"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createBundle(options: BundleOptions)")," - method to create a bundle."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/bundle"},"Read more about bundles")),(0,r.kt)("h4",{id:"properties-bundleoptions"},"Properties BundleOptions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - Name of the bundle. The value will be used as a bundle identifier."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"components: {}")," - An object with registered components for the bundle, which you can use in application routes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"presets?: []")," - A list of additional properties for the current bundle. This list is merged with the current properties. Needed to extract common parts, e.g. a set with actions and components for authorization. Reference - babel and eslint presets"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"actions?: []")," - List of ",(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/action"},"actions")," that will be registered globally for the bundle"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"reducers?: []")," - List of ",(0,r.kt)("a",{parentName:"li",href:"/docs/references/tramvai/state/base"},"reducers"),", which must be registered with the loading of the bundle")),(0,r.kt)("h4",{id:"usage-2"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createBundle } from '@tramvai/core';\nimport { lazy } from '@tramvai/react';\n\ncreateBundle({\n  name: 'app/bundle',\n  presets: [commonPreset],\n  components: {\n    'app/pages/MainPage': lazy(() => import('../pages/MainPage')),\n    'app/pages/SecondPage': lazy(() => import('../pages/SecondPage')),\n  },\n  actions: [fooAction, barAction],\n  reducers: [bazReducer],\n});\n")),(0,r.kt)("h2",{id:"exported-tokens"},"Exported tokens"),(0,r.kt)("h3",{id:"di_token"},"DI_TOKEN"),(0,r.kt)("p",null,"Dependency Injection container implementation"),(0,r.kt)("h3",{id:"app_info_token"},"APP_INFO_TOKEN"),(0,r.kt)("p",null,"Information about running application"),(0,r.kt)("h3",{id:"command_line_runner_token"},"COMMAND_LINE_RUNNER_TOKEN"),(0,r.kt)("p",null,"CommandLineRunner implementation"),(0,r.kt)("h3",{id:"command_lines_token"},"COMMAND_LINES_TOKEN"),(0,r.kt)("p",null,"Commands for CommandLineRunner"))}u.isMDXComponent=!0}}]);